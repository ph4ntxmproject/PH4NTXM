#!/usr/bin/env python3
import gi
import subprocess
gi.require_version("Gtk", "3.0")
from gi.repository import Gtk, GObject

APP_ICON = "editdelete"
TOOLTIP_IDLE = "PH4NTXM Panic Button"
TOOLTIP_PANIC = "SYSTEM IN PANIC âž¡ NUKING...!"

panic_active = False

def trigger_panic(_):
    global panic_active
    panic_active = True
    status_icon.set_tooltip_text(TOOLTIP_PANIC)
    subprocess.Popen(["/usr/local/bin/ph4ntxm-panic"])

def quit_app(_):
    Gtk.main_quit()

status_icon = Gtk.StatusIcon()
status_icon.set_from_icon_name(APP_ICON)
status_icon.set_tooltip_text(TOOLTIP_IDLE)
status_icon.set_visible(True)

menu = Gtk.Menu()

item_trigger = Gtk.MenuItem(label="Trigger Panic")
item_trigger.connect("activate", trigger_panic)
menu.append(item_trigger)

item_quit = Gtk.MenuItem(label="Quit")
item_quit.connect("activate", quit_app)
menu.append(item_quit)

menu.show_all()

def on_right_click(icon, button, time):
    menu.popup(None, None, None, None, button, time)

status_icon.connect("popup-menu", on_right_click)

def blink_icon():
    if panic_active:
        current = status_icon.get_from_icon_name()
        status_icon.set_from_icon_name(APP_ICON if current != APP_ICON else "dialog-warning")
    return True

GObject.timeout_add(500, blink_icon)

Gtk.main()
